# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master","pipe-test" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # build:

  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [18.x]
  #       # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'npm'
  #     - run: npm ci
  #     - run: npm run build --if-present
  #     # - run: npm test
    
  #     # - name: "build artifact"
  #     #   uses: actions/upload-artifact@v3
  #     #   with:
  #     #     name: vmb
  #     #     path: build
  #     #     if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    # needs:
    #   - build
    permissions:
      contents: write
    steps:
      # - name: "download build artifact"
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: vmb
      #     path: build


      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - run: echo ${{ github.sha }} > Release.txt
        
      # - name: Build
      #   run: echo ${{ github.sha }} > Release.txt
        
      - name: Test
        run: cat Release.txt
        
      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::UserBuild_$(date +"%Y.%m.%d_%H-%M")"

      # - name: Add Template Folders
      #   run: |
      #     git init
      #     git remote add -f origin https://github.com/dalokraff/VMF-Build-Script
      #     git config core.sparsecheckout true
      #     echo .template-vmf/ >> .git/info/sparse-checkout
      #     echo .template/ >> .git/info/sparse-checkout
      #     echo mods/ >> .git/info/sparse-checkout
      #     git pull origin master
          
      - name: Release
        uses: softprops/action-gh-release@v1
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: |
            Release.txt
            LICENSE
            mods
            .template/*
            # .template-vmf/*
            vmb.exe

